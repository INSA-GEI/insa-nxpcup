   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	2
  19              		.global	main
  20              		.code	16
  21              		.thumb_func
  23              	main:
  24              	.LFB0:
  25              		.file 1 "../Sources/main.c"
   1:../Sources/main.c **** #include <MKL25Z4.h>
   2:../Sources/main.c **** #include "Debug.h"
   3:../Sources/main.c **** 
   4:../Sources/main.c **** #define SLOW_BLINK      (10000000)
   5:../Sources/main.c **** #define FAST_BLINK      (500000)
   6:../Sources/main.c **** #define BLINK_DELAY     FAST_BLINK
   7:../Sources/main.c **** 
   8:../Sources/main.c **** void clock_init();
   9:../Sources/main.c **** void delay_time(int);
  10:../Sources/main.c **** int main (void){
  26              		.loc 1 10 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 82B0     		sub	sp, sp, #8
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
  11:../Sources/main.c **** 	clock_init();
  39              		.loc 1 11 0
  40 0006 FFF7FEFF 		bl	clock_init
  12:../Sources/main.c **** 	int i=0;
  41              		.loc 1 12 0
  42 000a 0023     		mov	r3, #0
  43 000c 7B60     		str	r3, [r7, #4]
  13:../Sources/main.c **** 	debug_init();
  44              		.loc 1 13 0
  45 000e FFF7FEFF 		bl	debug_init
  46 0012 00E0     		b	.L3
  47              	.L4:
  14:../Sources/main.c **** 	while(1){
  15:../Sources/main.c **** 		debug_displaySendNb(i);
  16:../Sources/main.c **** 		GPIOB_PTOR = DEBUG_RED_Pin;
  17:../Sources/main.c **** 		delay_time(FAST_BLINK);
  18:../Sources/main.c **** 		if(++i>16){
  19:../Sources/main.c **** 			i=0;
  20:../Sources/main.c **** 			GPIOB_PTOR = DEBUG_GREEN_Pin;
  21:../Sources/main.c **** 		}
  22:../Sources/main.c **** 	}
  48              		.loc 1 22 0
  49 0014 C046     		mov	r8, r8
  50              	.L3:
  15:../Sources/main.c **** 		debug_displaySendNb(i);
  51              		.loc 1 15 0
  52 0016 7B68     		ldr	r3, [r7, #4]
  53 0018 181C     		mov	r0, r3
  54 001a FFF7FEFF 		bl	debug_displaySendNb
  16:../Sources/main.c **** 		GPIOB_PTOR = DEBUG_RED_Pin;
  55              		.loc 1 16 0
  56 001e 0A4B     		ldr	r3, .L5
  57 0020 8022     		mov	r2, #128
  58 0022 D202     		lsl	r2, r2, #11
  59 0024 DA60     		str	r2, [r3, #12]
  17:../Sources/main.c **** 		delay_time(FAST_BLINK);
  60              		.loc 1 17 0
  61 0026 094B     		ldr	r3, .L5+4
  62 0028 181C     		mov	r0, r3
  63 002a FFF7FEFF 		bl	delay_time
  18:../Sources/main.c **** 		if(++i>16){
  64              		.loc 1 18 0
  65 002e 7B68     		ldr	r3, [r7, #4]
  66 0030 0133     		add	r3, r3, #1
  67 0032 7B60     		str	r3, [r7, #4]
  68 0034 7B68     		ldr	r3, [r7, #4]
  69 0036 102B     		cmp	r3, #16
  70 0038 ECDD     		ble	.L4
  19:../Sources/main.c **** 			i=0;
  71              		.loc 1 19 0
  72 003a 0023     		mov	r3, #0
  73 003c 7B60     		str	r3, [r7, #4]
  20:../Sources/main.c **** 			GPIOB_PTOR = DEBUG_GREEN_Pin;
  74              		.loc 1 20 0
  75 003e 024B     		ldr	r3, .L5
  76 0040 8022     		mov	r2, #128
  77 0042 1203     		lsl	r2, r2, #12
  78 0044 DA60     		str	r2, [r3, #12]
  79              		.loc 1 22 0
  80 0046 E5E7     		b	.L4
  81              	.L6:
  82              		.align	2
  83              	.L5:
  84 0048 40F00F40 		.word	1074786368
  85 004c 20A10700 		.word	500000
  86              		.cfi_endproc
  87              	.LFE0:
  89              		.section	.text.delay_time,"ax",%progbits
  90              		.align	2
  91              		.global	delay_time
  92              		.code	16
  93              		.thumb_func
  95              	delay_time:
  96              	.LFB1:
  23:../Sources/main.c **** }
  24:../Sources/main.c **** 
  25:../Sources/main.c **** void delay_time(int number){
  97              		.loc 1 25 0
  98              		.cfi_startproc
  99 0000 80B5     		push	{r7, lr}
 100              	.LCFI3:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 84B0     		sub	sp, sp, #16
 105              	.LCFI4:
 106              		.cfi_def_cfa_offset 24
 107 0004 00AF     		add	r7, sp, #0
 108              	.LCFI5:
 109              		.cfi_def_cfa_register 7
 110 0006 7860     		str	r0, [r7, #4]
  26:../Sources/main.c **** 	int cnt;
  27:../Sources/main.c **** 	for(cnt=0;cnt<number;cnt++);
 111              		.loc 1 27 0
 112 0008 0023     		mov	r3, #0
 113 000a FB60     		str	r3, [r7, #12]
 114 000c 02E0     		b	.L8
 115              	.L9:
 116              		.loc 1 27 0 is_stmt 0
 117 000e FB68     		ldr	r3, [r7, #12]
 118 0010 0133     		add	r3, r3, #1
 119 0012 FB60     		str	r3, [r7, #12]
 120              	.L8:
 121              		.loc 1 27 0
 122 0014 FA68     		ldr	r2, [r7, #12]
 123 0016 7B68     		ldr	r3, [r7, #4]
 124 0018 9A42     		cmp	r2, r3
 125 001a F8DB     		blt	.L9
  28:../Sources/main.c **** }
 126              		.loc 1 28 0 is_stmt 1
 127 001c BD46     		mov	sp, r7
 128 001e 04B0     		add	sp, sp, #16
 129              		@ sp needed for prologue
 130 0020 80BD     		pop	{r7, pc}
 131              		.cfi_endproc
 132              	.LFE1:
 134 0022 C046     		.section	.text.clock_init,"ax",%progbits
 135              		.align	2
 136              		.global	clock_init
 137              		.code	16
 138              		.thumb_func
 140              	clock_init:
 141              	.LFB2:
  29:../Sources/main.c **** 
  30:../Sources/main.c **** 
  31:../Sources/main.c **** void clock_init(){
 142              		.loc 1 31 0
 143              		.cfi_startproc
 144 0000 80B5     		push	{r7, lr}
 145              	.LCFI6:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 84B0     		sub	sp, sp, #16
 150              	.LCFI7:
 151              		.cfi_def_cfa_offset 24
 152 0004 00AF     		add	r7, sp, #0
 153              	.LCFI8:
 154              		.cfi_def_cfa_register 7
  32:../Sources/main.c **** 	MCG_C2 = (MCG_C2_RANGE0(1) | MCG_C2_EREFS0_MASK); 	// configure the oscillator settings
 155              		.loc 1 32 0
 156 0006 294B     		ldr	r3, .L17
 157 0008 1422     		mov	r2, #20
 158 000a 5A70     		strb	r2, [r3, #1]
  33:../Sources/main.c **** 	MCG_C1 = (MCG_C1_CLKS(2) | MCG_C1_FRDIV(3));		// divider for 8 MHz clock	
 159              		.loc 1 33 0
 160 000c 274B     		ldr	r3, .L17
 161 000e 9822     		mov	r2, #152
 162 0010 1A70     		strb	r2, [r3]
 163              	.LBB2:
  34:../Sources/main.c **** 	for (int i = 0 ; i < 24000 ; i++);						// wait for OSCINIT to set
 164              		.loc 1 34 0
 165 0012 0023     		mov	r3, #0
 166 0014 FB60     		str	r3, [r7, #12]
 167 0016 02E0     		b	.L11
 168              	.L12:
 169              		.loc 1 34 0 is_stmt 0
 170 0018 FB68     		ldr	r3, [r7, #12]
 171 001a 0133     		add	r3, r3, #1
 172 001c FB60     		str	r3, [r7, #12]
 173              	.L11:
 174              		.loc 1 34 0
 175 001e FA68     		ldr	r2, [r7, #12]
 176 0020 234B     		ldr	r3, .L17+4
 177 0022 9A42     		cmp	r2, r3
 178 0024 F8DD     		ble	.L12
 179              	.LBE2:
  35:../Sources/main.c **** 	// now in FBE mode
  36:../Sources/main.c **** 	MCG_C6 |= MCG_C6_CME0_MASK;		// enable the clock monitor
 180              		.loc 1 36 0 is_stmt 1
 181 0026 214B     		ldr	r3, .L17
 182 0028 204A     		ldr	r2, .L17
 183 002a 5279     		ldrb	r2, [r2, #5]
 184 002c D2B2     		uxtb	r2, r2
 185 002e 2021     		mov	r1, #32
 186 0030 0A43     		orr	r2, r1
 187 0032 D2B2     		uxtb	r2, r2
 188 0034 5A71     		strb	r2, [r3, #5]
  37:../Sources/main.c **** 	MCG_C5 |= MCG_C5_PRDIV0(1); 	// set PLL ref divider to divide by 2
 189              		.loc 1 37 0
 190 0036 1D4B     		ldr	r3, .L17
 191 0038 1C4A     		ldr	r2, .L17
 192 003a 1279     		ldrb	r2, [r2, #4]
 193 003c D2B2     		uxtb	r2, r2
 194 003e 0121     		mov	r1, #1
 195 0040 0A43     		orr	r2, r1
 196 0042 D2B2     		uxtb	r2, r2
 197 0044 1A71     		strb	r2, [r3, #4]
  38:../Sources/main.c **** 	int temp_reg = MCG_C6; 				// store present C6 value (as CME0 bit was previously set)
 198              		.loc 1 38 0
 199 0046 194B     		ldr	r3, .L17
 200 0048 5B79     		ldrb	r3, [r3, #5]
 201 004a DBB2     		uxtb	r3, r3
 202 004c 3B60     		str	r3, [r7]
  39:../Sources/main.c **** 	temp_reg &= ~MCG_C6_VDIV0_MASK; // clear VDIV settings
 203              		.loc 1 39 0
 204 004e 3B68     		ldr	r3, [r7]
 205 0050 1F22     		mov	r2, #31
 206 0052 9343     		bic	r3, r2
 207 0054 3B60     		str	r3, [r7]
  40:../Sources/main.c **** 	temp_reg |= MCG_C6_PLLS_MASK | MCG_C6_VDIV0(0); 	// write new VDIV and enable PLL
 208              		.loc 1 40 0
 209 0056 3B68     		ldr	r3, [r7]
 210 0058 4022     		mov	r2, #64
 211 005a 1343     		orr	r3, r2
 212 005c 3B60     		str	r3, [r7]
  41:../Sources/main.c **** 	MCG_C6 = temp_reg; 				// update MCG_C6		
 213              		.loc 1 41 0
 214 005e 134B     		ldr	r3, .L17
 215 0060 3A68     		ldr	r2, [r7]
 216 0062 D2B2     		uxtb	r2, r2
 217 0064 5A71     		strb	r2, [r3, #5]
 218              	.LBB3:
  42:../Sources/main.c **** 	for (int i = 0 ; i < 4000 ; i++); 	// wait for PLLST status bit to set
 219              		.loc 1 42 0
 220 0066 0023     		mov	r3, #0
 221 0068 BB60     		str	r3, [r7, #8]
 222 006a 02E0     		b	.L13
 223              	.L14:
 224              		.loc 1 42 0 is_stmt 0
 225 006c BB68     		ldr	r3, [r7, #8]
 226 006e 0133     		add	r3, r3, #1
 227 0070 BB60     		str	r3, [r7, #8]
 228              	.L13:
 229              		.loc 1 42 0
 230 0072 BA68     		ldr	r2, [r7, #8]
 231 0074 0F4B     		ldr	r3, .L17+8
 232 0076 9A42     		cmp	r2, r3
 233 0078 F8DD     		ble	.L14
 234              	.LBE3:
  43:../Sources/main.c **** 	// now in PBE mode
  44:../Sources/main.c **** 	SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(1) | SIM_CLKDIV1_OUTDIV4(1));	// core clock, bus clock div by 2
 235              		.loc 1 44 0 is_stmt 1
 236 007a 0F4A     		ldr	r2, .L17+12
 237 007c 0F4B     		ldr	r3, .L17+16
 238 007e 1049     		ldr	r1, .L17+20
 239 0080 D150     		str	r1, [r2, r3]
  45:../Sources/main.c **** 	MCG_C1 &= ~MCG_C1_CLKS_MASK;	// switch CLKS mux to select the PLL as MCGCLKOUT	
 240              		.loc 1 45 0
 241 0082 0A4B     		ldr	r3, .L17
 242 0084 094A     		ldr	r2, .L17
 243 0086 1278     		ldrb	r2, [r2]
 244 0088 D1B2     		uxtb	r1, r2
 245 008a 3F22     		mov	r2, #63
 246 008c 0A40     		and	r2, r1
 247 008e D2B2     		uxtb	r2, r2
 248 0090 1A70     		strb	r2, [r3]
 249              	.LBB4:
  46:../Sources/main.c **** 	for (int i = 0 ; i < 2000 ; i++);	// Wait for clock status bits to update
 250              		.loc 1 46 0
 251 0092 0023     		mov	r3, #0
 252 0094 7B60     		str	r3, [r7, #4]
 253 0096 02E0     		b	.L15
 254              	.L16:
 255              		.loc 1 46 0 is_stmt 0
 256 0098 7B68     		ldr	r3, [r7, #4]
 257 009a 0133     		add	r3, r3, #1
 258 009c 7B60     		str	r3, [r7, #4]
 259              	.L15:
 260              		.loc 1 46 0
 261 009e 7A68     		ldr	r2, [r7, #4]
 262 00a0 084B     		ldr	r3, .L17+24
 263 00a2 9A42     		cmp	r2, r3
 264 00a4 F8DD     		ble	.L16
 265              	.LBE4:
  47:../Sources/main.c **** 	// now in PEE mode, core and system clock 48 MHz, bus and flash clock 24 MHz
  48:../Sources/main.c **** 
  49:../Sources/main.c **** }
 266              		.loc 1 49 0 is_stmt 1
 267 00a6 BD46     		mov	sp, r7
 268 00a8 04B0     		add	sp, sp, #16
 269              		@ sp needed for prologue
 270 00aa 80BD     		pop	{r7, pc}
 271              	.L18:
 272              		.align	2
 273              	.L17:
 274 00ac 00400640 		.word	1074151424
 275 00b0 BF5D0000 		.word	23999
 276 00b4 9F0F0000 		.word	3999
 277 00b8 00700440 		.word	1074032640
 278 00bc 44100000 		.word	4164
 279 00c0 00000110 		.word	268500992
 280 00c4 CF070000 		.word	1999
 281              		.cfi_endproc
 282              	.LFE2:
 284              		.text
 285              	.Letext0:
 286              		.file 2 "C:/Freescale/CW MCU v11.1/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 287              		.file 3 "D:/Documents/ecole/insa/4A/NXPCUP/insa-nxpcup/code/2019-2020/periphs/test/Project_Headers
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccc8dKgj.s:18     .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccc8dKgj.s:23     .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccc8dKgj.s:140    .text.clock_init:00000000 clock_init
C:\Users\User\AppData\Local\Temp\ccc8dKgj.s:95     .text.delay_time:00000000 delay_time
C:\Users\User\AppData\Local\Temp\ccc8dKgj.s:84     .text.main:00000048 $d
C:\Users\User\AppData\Local\Temp\ccc8dKgj.s:90     .text.delay_time:00000000 $t
C:\Users\User\AppData\Local\Temp\ccc8dKgj.s:135    .text.clock_init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccc8dKgj.s:274    .text.clock_init:000000ac $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
debug_init
debug_displaySendNb
